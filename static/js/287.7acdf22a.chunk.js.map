{"version":3,"file":"static/js/287.7acdf22a.chunk.js","mappings":"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","sources":["api/user.ts","components/Form/Label/index.js","components/Form/Input/index.tsx","components/QuickRedirect/index.tsx","routes/login/components/Form1.js","routes/login/pages/login3.tsx","../node_modules/form-data/lib/browser.js"],"sourcesContent":["import axios from \"axios\";\r\nimport { UserProperty } from \"@AppTypes/user\";\r\nimport FormData from 'form-data'\r\n\r\nconst GET_USER_DATA = process.env[\"REACT_APP_HOST\"] + \"/user/get\";\r\nconst UPDATE_USER_DATA = process.env[\"REACT_APP_HOST\"] + \"/user/update\";\r\n\r\nexport function parseUser(user: any): UserProperty {\r\n    console.log(user);\r\n\r\n    return {\r\n        id: user[\"_id\"],\r\n        username: user[\"username\"],\r\n        name: user[\"given_name\"],\r\n        avtHref: user[\"picture\"][\"name\"],\r\n        theme: user[\"theme\"],\r\n        distance: user[\"distance\"],\r\n        address: \"\",\r\n        role: user[\"role\"],\r\n        email: user[\"email\"],\r\n        phone: user[\"phone\"],\r\n    } as UserProperty;\r\n}\r\n\r\nexport async function getUserData(): Promise<{ ok: boolean, data: any }> {\r\n    try {\r\n        const response = await axios.get(GET_USER_DATA, {\r\n            withCredentials: true,\r\n            headers: {\r\n                \"Access-Control-Allow-Origin\": \"*\",\r\n                \"Access-Control-Allow-Methods\": \"GET,PUT,POST,DELETE,PATCH,OPTIONS\",\r\n            }\r\n        });\r\n        if (response.status === 200) {\r\n            return {\r\n                ok: true,\r\n                data: response.data\r\n            }\r\n        }\r\n    } catch (error) {\r\n        console.log(error);\r\n    }\r\n    return {\r\n        ok: false,\r\n        data: undefined\r\n    }\r\n}\r\n\r\nexport function updateUserData(data: any): Promise<any> {\r\n    return new Promise((resolve, reject) => {\r\n        if (data) {\r\n            axios.post(UPDATE_USER_DATA, data, {\r\n                withCredentials: true,\r\n                headers: {\r\n                    \"Access-Control-Allow-Origin\": \"*\",\r\n                    \"Access-Control-Allow-Methods\": \"GET,PUT,POST,DELETE,PATCH,OPTIONS\",\r\n                }\r\n            })\r\n                .then(response => {\r\n                    if (response.status === 200) resolve(undefined)\r\n                    else reject(\"Error updating user data\");\r\n                })\r\n                .catch(error => {\r\n                    reject(error);\r\n                });\r\n        } else reject(\"No data to update\");\r\n    });\r\n}\r\n\r\nexport function uploadImage(file: File): Promise<any> {\r\n    return new Promise((resolve, reject) => {\r\n        if (file) {\r\n            const formData = new FormData();\r\n            formData.append(\"file\", file);\r\n            console.log(formData);\r\n\r\n            axios.post(UPDATE_USER_DATA, formData, {\r\n                withCredentials: true,\r\n                headers: {\r\n                    \"Access-Control-Allow-Origin\": \"*\",\r\n                    \"Access-Control-Allow-Methods\": \"GET,PUT,POST,DELETE,PATCH,OPTIONS\",\r\n                    'Content-Type': 'multipart/form-data'\r\n                }\r\n            })\r\n                .then(response => {\r\n                    if (response.status === 200) resolve(undefined)\r\n                    else reject(\"Error uploading image\");\r\n                })\r\n                .catch(error => {\r\n                    reject(error)\r\n                });\r\n        } else resolve(undefined);\r\n    });\r\n}\r\n\r\n","export default function Label({ children, forInput, required = false }) {\r\n    return (\r\n        <label\r\n            htmlFor={forInput}\r\n            className=\"w-[32%] font-bold truncate text-gray-600\">\r\n            {children}\r\n            {required && <span className=\"text-red-500\">*</span>}\r\n        </label>\r\n    )\r\n}","import React from \"react\"\r\nimport Label from \"@components/Form/Label\"\r\ninterface InputProps {\r\n    type?: string,\r\n    placeholder?: string,\r\n    name: string,\r\n    label: string,\r\n    disable?: boolean,\r\n    required?: boolean,\r\n    value?: string,\r\n    onChange?: (e: React.ChangeEvent<HTMLInputElement>) => void,\r\n}\r\n\r\ninterface InputState {\r\n    value: string\r\n}\r\nexport default class Input extends React.Component<InputProps, InputState> {\r\n    constructor(props: InputProps) {\r\n        super(props)\r\n        this.state = {\r\n            value: props.value || \"\"\r\n        }\r\n    }\r\n\r\n    handleChange = (e: React.ChangeEvent<HTMLInputElement>) => {\r\n        this.setState({\r\n            value: e.target.value,\r\n        });\r\n\r\n        if (this.props.onChange) {\r\n            this.props.onChange(e);\r\n        }\r\n    }\r\n\r\n    render() {\r\n        const {\r\n            type = \"text\", placeholder = \"\", name, label,\r\n            disable = false, required = false\r\n        } = this.props;\r\n        \r\n        return (\r\n            <div className=\"form-item\">\r\n                <Label forInput={name} required={required}>{label}</Label>\r\n                <div className={(\"w-full rounded-lg h-fit \" + (disable ? \"bg-gray-300\" : \"bg-gray-100\"))}>\r\n                    <input\r\n                        value={this.state.value}\r\n                        required={required}\r\n                        disabled={disable}\r\n                        type={type}\r\n                        placeholder={placeholder}\r\n                        name={name}\r\n                        className=\"w-full outline-none p-2 bg-transparent focus:outline-4 focus:outline-violet/40 rounded-lg\"\r\n                        onChange={this.handleChange.bind(this)}\r\n                    />\r\n                </div>\r\n            </div>\r\n\r\n        )\r\n    }\r\n}\r\n","export interface LinkObject {\r\n    href: string;\r\n    text: string;\r\n    separator?: string;\r\n}\r\n\r\nconst defaultValue: LinkObject[] = [\r\n    { href: \"#\", text: \"Điều khoản\" },\r\n    { href: \"#\", text: \"Nhóm 7\" },\r\n    { href: \"#\", text: \"Tiro\" }\r\n];\r\n\r\nexport default function QuickRedirect({ link = defaultValue }: { link?: LinkObject[] }) {\r\n    return (\r\n        <div className=\"text-gray-400 flex flex-wrap justify-center mb-10\">\r\n            {link.map((item, index) => {\r\n                return (\r\n                    <div key={index} className=\"flex items-center\">\r\n                        <a href={item.href} className=\"text-gray-400 text-[14px] \">\r\n                            {item.text}\r\n                        </a>\r\n                        {(index != link.length - 1) && <span className=\"mx-2\">{item.separator || \" · \"}</span>}\r\n                    </div>\r\n                );\r\n            })}\r\n        </div>\r\n    )\r\n}","import { AvatarSize } from \"@AppTypes/user\";\r\nimport Avatar from \"@components/Avatar\";\r\nimport Input from \"@components/Form/Input\";\r\nimport { Navigate } from \"react-router-dom\";\r\nimport { useState, useContext } from \"react\";\r\nimport { toast } from \"react-toastify\";\r\nimport { updateUserData } from \"@api/user\";\r\nimport { UserContext } from \"@hooks/UserManager\";\r\n\r\nexport default function Form1() {\r\n    const [isRedirectUrl, setIsRedirectUrl] = useState(false);\r\n    const [redirectUrl, setRedirectUrl] = useState('');\r\n    const { user } = useContext(UserContext);\r\n\r\n    const handleSubmit = (e) => {\r\n        e.preventDefault()\r\n\r\n        const name = e.target.name.value\r\n        const phone = e.target.telephone_number.value\r\n        const address = e.target.address.value\r\n\r\n        const data = {\r\n            given_name: name,\r\n            phone,\r\n            address\r\n        }\r\n\r\n        async function updateUser() {\r\n            return new Promise((resolve, reject) => {\r\n                Promise.all([updateUserData(data)])\r\n                    .then(() => {\r\n                        setIsRedirectUrl(true);\r\n                        setRedirectUrl('/');\r\n                        resolve();\r\n                    }).catch((error) => {\r\n                        toast.error(error.message);\r\n                        console.log(error);\r\n                        reject(error);\r\n                    });\r\n            });\r\n        }\r\n\r\n        toast.promise(\r\n            updateUser, {\r\n            pending: 'Đang cập nhật',\r\n            success: 'Cập nhật thành thành công',\r\n            error: 'Cập nhật thất bại',\r\n        }, {\r\n            position: \"top-center\",\r\n            autoClose: 5000,\r\n            hideProgressBar: false,\r\n            closeOnClick: true,\r\n            pauseOnHover: true,\r\n            draggable: true,\r\n            progress: undefined,\r\n        });\r\n\r\n    }\r\n\r\n    return (\r\n        (isRedirectUrl)\r\n            ? <Navigate to={redirectUrl} />\r\n            : <form className=\"h-full flex flex-col justify-evenly items-center\" onSubmit={handleSubmit}>\r\n                <Avatar user={user} size={AvatarSize.XLarge} />\r\n\r\n                <div className=\"w-full px-5\">\r\n                    <Input name=\"name\" label=\"Tên\" placeholder=\"Nguyen Van A\" required value={user.name} />\r\n                    <Input name=\"email\" label=\"Email\" placeholder=\"nva@gmail.com\" value={user.email} disable />\r\n                    <Input name=\"telephone_number\" label=\"SĐT\" placeholder=\"+84123456789\" required value={user.phone} />\r\n                    <Input name=\"address\" label=\"Địa chỉ\" placeholder=\"Hà Nội\" value={user.address} />\r\n                    <i>Các mục đánh dấu <span className=\"text-red-500\">*</span> là buộc phải điền</i>\r\n                </div>\r\n\r\n                <div className=\"pt-2 flex justify-center\">\r\n                    <button\r\n                        type=\"submit\"\r\n                        className=\"h-[48px] w-[120px] p-4 rounded-full bg-violet text-white\r\n                     flex items-center justify-center transition ease-in-out duration-700 hover:bg-violet/80\">\r\n                        Lưu\r\n                    </button>\r\n                </div>\r\n            </form>\r\n    )\r\n}","import login_illus_2 from \"@images/login-illus-2.png\";\r\nimport Logo from \"@components/Logo\";\r\nimport QuickRedirect from \"@components/QuickRedirect\";\r\nimport Form1 from \"../components/Form1\";\r\nimport \"../index.scss\";\r\n\r\nexport default function LoginThree() {\r\n    return (\r\n        <div className=\"w-screen h-screen bg-cover login-page\">\r\n            <div className=\"flex items-center justify-center h-screen\">\r\n                <div className=\"bg-white shadow-md rounded-3xl grid grid-cols-2 p-3 w-5/6 ss:w-4/5 3xl:w-3/5 h-4/5\">\r\n                    <div className=\"hidden lg:flex lg:flex-col col-span-1 mx-16 my-8 justify-between\">\r\n                        <div className=\"flex justify-center\">\r\n                            <Logo size=\"48px\" />\r\n                        </div>\r\n                        <p className=\"text-center pb-8\"><b>Nền tảng tìm trọ tốt nhất cho sinh viên</b></p>\r\n                        <div className=\"flex justify-center\">\r\n                            <p className=\"text-justify w-4/5\">Đăng ký ngay để cùng tham gia mạng lưới với hơn <b className=\"text-2xl\">100.000</b> nhà cung cấp</p>\r\n                        </div>\r\n                        <div className=\"h-1/2\">\r\n                            <img src={login_illus_2} className=\"h-full w-auto\" alt=\"illus\" />\r\n                        </div>\r\n                        <div className=\"w-full flex justify-center\">\r\n                            <QuickRedirect />\r\n                        </div>\r\n                    </div>\r\n                    <div className=\"col-span-2 lg:col-span-1\">\r\n                        <Form1 />\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}","/* eslint-env browser */\nmodule.exports = typeof self == 'object' ? self.FormData : window.FormData;\n"],"names":["UPDATE_USER_DATA","process","updateUserData","data","Promise","resolve","reject","axios","withCredentials","headers","then","response","status","undefined","catch","error","uploadImage","file","formData","FormData","append","console","log","Label","children","forInput","required","htmlFor","className","Input","props","handleChange","e","setState","value","target","onChange","state","this","type","placeholder","name","label","disable","disabled","bind","React","defaultValue","href","text","QuickRedirect","link","map","item","index","length","separator","Form1","useState","isRedirectUrl","setIsRedirectUrl","redirectUrl","setRedirectUrl","user","useContext","UserContext","to","onSubmit","preventDefault","given_name","phone","telephone_number","address","all","toast","message","pending","success","position","autoClose","hideProgressBar","closeOnClick","pauseOnHover","draggable","progress","Avatar","size","AvatarSize","email","LoginThree","Logo","src","login_illus_2","alt","module","exports","self","window"],"sourceRoot":""}