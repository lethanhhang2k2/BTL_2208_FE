{"version":3,"file":"static/js/533.7ca5c75e.chunk.js","mappings":"+IAMMA,EAA6B,CAC/B,CAAEC,KAAM,IAAKC,KAAM,6BACnB,CAAED,KAAM,IAAKC,KAAM,aACnB,CAAED,KAAM,IAAKC,KAAM,SAGR,SAASC,EAAT,GAA0E,IAAD,IAAhDC,KAAAA,OAAgD,MAAzCJ,EAAyC,EACpF,OACI,gBAAKK,UAAU,oDAAf,SACKD,EAAKE,KAAI,SAACC,EAAMC,GACb,OACI,iBAAiBH,UAAU,oBAA3B,WACI,cAAGJ,KAAMM,EAAKN,KAAMI,UAAU,6BAA9B,SACKE,EAAKL,OAERM,GAASJ,EAAKK,OAAS,IAAM,iBAAMJ,UAAU,OAAhB,SAAwBE,EAAKG,WAAa,aAJnEF,U,+ICRxBG,EAAsB,CACxB,CAAEV,KAAM,IAAKC,KAAM,6BACnB,CAAED,KAAM,IAAKC,KAAM,4BACnB,CAAED,KAAM,IAAKC,KAAM,yBACnB,CAAED,KAAM,IAAKC,KAAM,qBAGR,SAASU,EAAT,GAA4D,IAAzCC,EAAwC,EAAxCA,KAAMC,EAAkC,EAAlCA,gBACpC,OACI,iBAAKT,UAAU,0EAAf,WACI,gBAAKA,UAAU,qBAAf,UACI,SAACU,EAAA,EAAD,CAAMF,KAAMA,EAAMG,QAASC,EAAAA,GAAAA,OAAmBC,UAAU,EAAMC,SAAS,OAG3E,gBAAKd,UAAU,wCAAf,8CAIA,yBACKS,EAAgBR,KAAI,SAAAc,GACjB,OACI,iBAAoBf,UAAU,0CAA9B,WACI,SAACU,EAAA,EAAD,CAAMF,KAAMO,EAAOJ,QAASC,EAAAA,GAAAA,OAAmBC,UAAU,EAAOC,SAAS,KACzE,mBAAQd,UAAU,6BAAlB,wBAFMe,EAAMC,UAQ5B,SAAClB,EAAA,EAAD,CAAeC,KAAMO,O,uBC7BjC,SAASW,IACL,OAA0BC,EAAAA,EAAAA,UAAgB,IAA1C,eAAOC,EAAP,KAAcC,EAAd,KACQZ,GAASa,EAAAA,EAAAA,YAAWC,EAAAA,GAApBd,KAeR,OAdAe,EAAAA,EAAAA,YAAU,YACNC,EAAAA,EAAAA,MACKC,MAAK,SAAAC,GACFC,QAAQC,IAAIF,EAAIG,MAChB,IACMC,EADOJ,EAAIG,KACEC,MAAM7B,KAAI,SAAC8B,GAC1B,OAAOC,EAAAA,EAAAA,IAAUD,MAErBJ,QAAQC,IAAIE,GACZV,EAASU,MAEZG,OAAM,SAAAC,GAAG,OAAIP,QAAQC,IAAIM,QAC/B,KAGC,SAACC,EAAA,EAAD,WACI,gBAAKnC,UAAU,4BAAf,UACI,iBAAKA,UAAU,6DAAf,WACI,gBAAKA,UAAU,yCAAf,SACKmB,GAASA,EAAMlB,KAAI,SAAAmC,GAEhB,OADAT,QAAQC,IAAIQ,IACJ,SAACC,EAAA,EAAD,CAAoBR,KAAMO,EAAME,mBAAiB,GAAtCF,EAAKpB,UAIhC,SAACT,EAAD,CACIC,KAAMA,EACNC,gBAAiB,CAAC8B,EAAAA,GAAaA,EAAAA,aAQvD,OAAeC,EAAAA,EAAAA,MAAKvB","sources":["components/QuickRedirect/index.tsx","routes/newfeed/components/Suggest.tsx","routes/newfeed/index.tsx"],"sourcesContent":["export interface LinkObject {\r\n    href: string;\r\n    text: string;\r\n    separator?: string;\r\n}\r\n\r\nconst defaultValue: LinkObject[] = [\r\n    { href: \"#\", text: \"Điều khoản\" },\r\n    { href: \"#\", text: \"Nhóm 7\" },\r\n    { href: \"#\", text: \"Tiro\" }\r\n];\r\n\r\nexport default function QuickRedirect({ link = defaultValue }: { link?: LinkObject[] }) {\r\n    return (\r\n        <div className=\"text-gray-400 flex flex-wrap justify-center mb-10\">\r\n            {link.map((item, index) => {\r\n                return (\r\n                    <div key={index} className=\"flex items-center\">\r\n                        <a href={item.href} className=\"text-gray-400 text-[14px] \">\r\n                            {item.text}\r\n                        </a>\r\n                        {(index != link.length - 1) && <span className=\"mx-2\">{item.separator || \" · \"}</span>}\r\n                    </div>\r\n                );\r\n            })}\r\n        </div>\r\n    )\r\n}","import QuickRedirect, { LinkObject } from \"@components/QuickRedirect\";\r\nimport User from \"@components/User\";\r\nimport { UserProperty, AvatarSize } from \"@AppTypes/user\";\r\n\r\ninterface ISuggestProps {\r\n    user: UserProperty,\r\n    suggestedOwners: UserProperty[]\r\n}\r\n\r\nconst links: LinkObject[] = [\r\n    { href: \"#\", text: \"Điều khoản\" },\r\n    { href: \"#\", text: \"Hướng dẫn\" },\r\n    { href: \"#\", text: \"Top chủ trọ\" },\r\n    { href: \"#\", text: \"Ngôn ngữ\" },\r\n];\r\n\r\nexport default function Suggest({ user, suggestedOwners }: ISuggestProps) {\r\n    return (\r\n        <div className=\"w-[324px] sticky top-[128px] h-fit lerf-[920px] right-0 hidden lg:block\">\r\n            <div className=\"h-[80px] mb-[20px]\">\r\n                <User user={user} sizeAvt={AvatarSize.Medium} showName={true} twoLine={true} />\r\n            </div>\r\n\r\n            <div className=\"mb-[20px] text-gray-500 font-semibold\">\r\n                Gợi ý chủ trọ\r\n            </div>\r\n\r\n            <div>\r\n                {suggestedOwners.map(owner => {\r\n                    return (\r\n                        <div key={owner.id} className=\"mb-[20px] w-[100%] flex justify-between\">\r\n                            <User user={owner} sizeAvt={AvatarSize.SSmall} showName={false} twoLine={true} />\r\n                            <button className=\"text-[#0E60FF] text-[14px]\"> Follow </button>\r\n                        </div>\r\n                    )\r\n                })}\r\n            </div>\r\n\r\n            <QuickRedirect link={links} />\r\n        </div>\r\n    )\r\n}","\r\nimport { memo, useEffect, useState, useContext } from \"react\"\r\nimport AuthLayout from \"@layouts/AuthLayout\"\r\nimport { UserExample } from \"../../types/user\"\r\nimport Feed from \"../../components/Feed\"\r\nimport Suggest from \"./components/Suggest\"\r\nimport { getAllPosts, parsePost } from \"@api/post\"\r\nimport { UserContext } from \"@hooks/UserManager\"\r\n\r\nfunction NewFeed() {\r\n    const [feeds, setFeeds] = useState<any[]>([])\r\n    const { user } = useContext(UserContext)\r\n    useEffect(() => {\r\n        getAllPosts()\r\n            .then(res => {\r\n                console.log(res.data)\r\n                const data = res.data\r\n                const posts = data.posts.map((post: any) => {\r\n                    return parsePost(post)\r\n                })\r\n                console.log(posts)\r\n                setFeeds(posts)\r\n            })\r\n            .catch(err => console.log(err))\r\n    }, [])\r\n\r\n    return (\r\n        <AuthLayout>\r\n            <div className=\"pt-16 flex justify-center\">\r\n                <div className=\"max-w-[935px] w-full flex flex-row justify-center relative\">\r\n                    <div className=\"mr-0 lg:mr-[32px] max-w-[596px] w-full\">\r\n                        {feeds && feeds.map(feed => {\r\n                            console.log(feed)\r\n                            return (<Feed key={feed.id} data={feed} isShowFullComment />)\r\n                        })}\r\n                    </div>\r\n\r\n                    <Suggest\r\n                        user={user}\r\n                        suggestedOwners={[UserExample, UserExample]}\r\n                    />\r\n                </div>\r\n            </div>\r\n        </AuthLayout>\r\n    );\r\n}\r\n\r\nexport default memo(NewFeed)"],"names":["defaultValue","href","text","QuickRedirect","link","className","map","item","index","length","separator","links","Suggest","user","suggestedOwners","User","sizeAvt","AvatarSize","showName","twoLine","owner","id","NewFeed","useState","feeds","setFeeds","useContext","UserContext","useEffect","getAllPosts","then","res","console","log","data","posts","post","parsePost","catch","err","AuthLayout","feed","Feed","isShowFullComment","UserExample","memo"],"sourceRoot":""}