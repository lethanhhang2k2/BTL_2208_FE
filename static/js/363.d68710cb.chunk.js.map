{"version":3,"file":"static/js/363.d68710cb.chunk.js","mappings":"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","sources":["components/QuickRedirect/index.tsx","routes/search/components/tag_search.tsx","api/search.ts","routes/search/index.tsx"],"sourcesContent":["export interface LinkObject {\r\n    href: string;\r\n    text: string;\r\n    separator?: string;\r\n}\r\n\r\nconst defaultValue: LinkObject[] = [\r\n    { href: \"#\", text: \"Điều khoản\" },\r\n    { href: \"#\", text: \"Nhóm 7\" },\r\n    { href: \"#\", text: \"Tiro\" }\r\n];\r\n\r\nexport default function QuickRedirect({ link = defaultValue }: { link?: LinkObject[] }) {\r\n    return (\r\n        <div className=\"text-gray-400 flex flex-wrap justify-center mb-10\">\r\n            {link.map((item, index) => {\r\n                return (\r\n                    <div key={index} className=\"flex items-center\">\r\n                        <a href={item.href} className=\"text-gray-400 text-[14px] \">\r\n                            {item.text}\r\n                        </a>\r\n                        {(index != link.length - 1) && <span className=\"mx-2\">{item.separator || \" · \"}</span>}\r\n                    </div>\r\n                );\r\n            })}\r\n        </div>\r\n    )\r\n}","import React from \"react\";\r\n\r\ninterface IProps {\r\n    content: string,\r\n    isChecked?: boolean,\r\n    onClick?: () => void\r\n}\r\nexport default class TagSearch extends React.Component<IProps>{\r\n    render() {\r\n        const { content, isChecked = false, onClick } = this.props;\r\n        return (\r\n            <div className={\r\n                \"w-fit p-2 py-1 rounded-2xl border-2 border-blue-200 m-1 cursor-pointer hover:bg-blue-200 hover:text-white font-bold text-blue-500 \" +\r\n                (isChecked ? \"bg-blue-200 font-bold text-blue-500 \" : \"\")}\r\n                onClick={onClick}>\r\n                {content}\r\n            </div>\r\n        )\r\n    }\r\n}","import axios from \"axios\";\r\n\r\nconst SEARCH_HOST = \"http://tiro-app.herokuapp.com/search-by-text\";\r\n\r\nasync function getSearch(address: string[], price: number[], username: string) {\r\n    console.log(address[0], price[0], username);\r\n    \r\n    try {\r\n        const response = await axios.post(SEARCH_HOST, {\r\n            address: address[0],\r\n            price_category: price[0],\r\n            text: username\r\n        }, {\r\n            withCredentials: true,\r\n            headers: {\r\n                \"Access-Control-Allow-Origin\": \"*\",\r\n                \"Access-Control-Allow-Methods\": \"GET,PUT,POST,DELETE,PATCH,OPTIONS\",\r\n            }\r\n        });\r\n        if (response.status === 200) {\r\n            return {\r\n                ok: true,\r\n                data: response.data\r\n            }\r\n        }\r\n    } catch (error) {\r\n        console.log(error);\r\n    }\r\n    return {\r\n        ok: false,\r\n        data: undefined\r\n    }\r\n}\r\n\r\nexport {\r\n    getSearch\r\n}","import React from \"react\";\r\nimport AuthLayout from \"@layouts/AuthLayout\"\r\nimport Feed from \"@components/Feed\"\r\nimport User from \"@components/User\"\r\nimport { UserExample, AvatarSize, UserProperty } from \"@AppTypes/user\";\r\nimport QuickRedirect from \"@components/QuickRedirect\";\r\nimport { MotelProperty, MotelExampleList } from \"@AppTypes/motel\"\r\nimport TagSearch from \"./components/tag_search\";\r\nimport IconButton from \"@components/IconButton\";\r\nimport Icons, { IconName } from \"@components/Icons\";\r\nimport { getSearch } from \"@api/search\";\r\nimport { parseUser } from \"@api/user\";\r\nimport { parsePost } from \"@api/post\";\r\n\r\nconst Districts = [\r\n    \"Thanh Xuân\",\r\n    \"Cầu Giấy\",\r\n    \"Ba Đình\",\r\n    \"Hai Bà Trưng\",\r\n];\r\n\r\ninterface IState {\r\n    isTypingFilterAddress: boolean;\r\n    addressFilter: string[];\r\n    addressTyping: string;\r\n    priceFilter: {\r\n        title: string;\r\n        isCheck: boolean;\r\n        id: number;\r\n    }[],\r\n    keyword: string;\r\n    user_list: UserProperty[];\r\n    post_list: MotelProperty[];\r\n}\r\nexport default class SearchPage extends React.Component<{}, IState> {\r\n    constructor(prop: any) {\r\n        super(prop);\r\n        this.state = {\r\n            keyword: \"\",\r\n            addressTyping: \"\",\r\n            isTypingFilterAddress: false,\r\n            addressFilter: [],\r\n            priceFilter: [\r\n                {\r\n                    title: \"Dưới 2tr\",\r\n                    isCheck: false,\r\n                    id: 0\r\n                },\r\n                {\r\n                    title: \"Từ 2 - 4tr\",\r\n                    isCheck: false,\r\n                    id: 1\r\n                },\r\n                {\r\n                    title: \"Trên 4tr\",\r\n                    isCheck: false,\r\n                    id: 2\r\n                }\r\n            ],\r\n            user_list: [],\r\n            post_list: []\r\n        }\r\n    }\r\n    componentDidMount() {\r\n        var url = new URL(window.location.href);\r\n        var q = (url.searchParams.get(\"q\")) ? url.searchParams.get(\"q\") : \"\";\r\n        this.setState({ keyword: q as string }, this.find.bind(this));\r\n    }\r\n\r\n    find(): void {\r\n        getSearch(\r\n            this.state.addressFilter,\r\n            this.state.priceFilter\r\n                .filter(item => item.isCheck)\r\n                .map(item => item.id),\r\n            this.state.keyword)\r\n            .then(res => {\r\n                console.log(res);\r\n                if (res.ok) {\r\n                    // List of user \r\n                    const user_list: UserProperty[] = res.data.users.map((item: any) => parseUser(item));\r\n                    this.setState({ user_list: user_list });\r\n                    // List of post\r\n                    const post_list: MotelProperty[] = res.data.posts.map((item: any) => parsePost(item));\r\n                    this.setState({ post_list: post_list });\r\n                }\r\n            })\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <AuthLayout>\r\n                <div className=\"pt-16 flex flex-col items-center\">\r\n                    <div className=\"text-5xl font-bold text-gray-600 mb-14\">{\"Kết quả tìm kiếm của: \" + this.state.keyword} </div>\r\n                    <div className=\"max-w-[950px] w-full rounded-lg bg-indigo-50 mb-5 p-4\">\r\n                        <div className=\"flex mb-3 items-center\">\r\n                            <p className=\"font-semibold mr-3 min-w-fit\">Xem kết quả tại</p>\r\n                            {this.state.addressFilter.map((item) => <TagSearch\r\n                                key={item}\r\n                                content={item} isChecked\r\n                                onClick={() => {\r\n                                    this.setState({\r\n                                        addressFilter: [...this.state.addressFilter.filter(item_ => item_ != item)]\r\n                                    })\r\n                                }} />)}\r\n                            <div className=\"relative\">\r\n                                <div className=\"flex relative z-50\">\r\n                                    <IconButton onClick={() => { this.setState({ isTypingFilterAddress: false }) }} className={(this.state.isTypingFilterAddress ? \"\" : \"hidden\") + \" mx-1\"}>\r\n                                        <Icons iconName={IconName.CrossCircle} stroke=\"red\" />\r\n                                    </IconButton>\r\n                                    <IconButton onClick={() => { this.setState({ isTypingFilterAddress: true }) }} className=\"mx-1\">\r\n                                        <Icons iconName={IconName.PlusCircle} />\r\n                                    </IconButton>\r\n                                </div>\r\n                                <div className={\"flex flex-wrap \" + (this.state.isTypingFilterAddress ? \"absolute -top-3 left-0\" : \"hidden opacity-0\")}>\r\n                                    <div className=\"bg-white rounded-lg p-2\">\r\n                                        <input\r\n                                            type=\"text\"\r\n                                            placeholder=\"Địa chỉ\"\r\n                                            className=\"bg-transparent outline-none m-1 pl-14\"\r\n                                            value={this.state.addressTyping}\r\n                                            onChange={(event) => { this.setState({ addressTyping: event.target.value }) }} />\r\n                                        <div className=\"max-h-20 overflow-auto\">\r\n                                            {Districts.filter((item) => {\r\n                                                return this.state.addressFilter.indexOf(item) == -1 && item.toLowerCase().includes(this.state.addressTyping);\r\n                                            }).map(item =>\r\n                                                <p\r\n                                                    key={item}\r\n                                                    onClick={() => {\r\n                                                        this.setState({\r\n                                                            addressFilter: (this.state.addressFilter.indexOf(item) != -1)\r\n                                                                ? [...this.state.addressFilter]\r\n                                                                : [...this.state.addressFilter, item]\r\n                                                        })\r\n                                                    }}\r\n                                                    className=\"select-none hover:bg-gray-50 p-1 cursor-pointer rounded-md hover:font-semibold\">\r\n                                                    {item}\r\n                                                </p>)}\r\n                                        </div>\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                        <div className=\"flex items-center\">\r\n                            <p className=\"font-semibold mr-3 min-w-fit\">Giá tiền</p>\r\n                            <div className=\"flex flex-wrap\">\r\n                                {this.state.priceFilter.map((item, index) =>\r\n                                    <TagSearch\r\n                                        key={index}\r\n                                        content={item.title}\r\n                                        isChecked={item.isCheck}\r\n                                        onClick={\r\n                                            () => {\r\n                                                var tmp = this.state.priceFilter;\r\n                                                tmp[index].isCheck = !tmp[index].isCheck;\r\n                                                this.setState({ priceFilter: tmp })\r\n                                            }} />)\r\n                                }\r\n                            </div>\r\n                        </div>\r\n                        <button\r\n                            className=\"rounded-xl bg-blue-200 m-1 mt-4 px-4 w-fit py-1 font-semibold hover:bg-blue-300\"\r\n                            onClick={this.find.bind(this)}>\r\n                            Lọc\r\n                        </button>\r\n                    </div>\r\n                    <div className=\"max-w-[950px] w-full flex flex-col lg:flex-row justify-center items-center lg:items-start relative\">\r\n                        <div className=\"mr-0 max-w-[596px] lg:mr-[32px] w-full\">\r\n                            <div className=\"font-semibold text-gray-600 text-xl mb-8\">\r\n                                Bài viết liên quan\r\n                            </div>\r\n                            <div>\r\n                                {this.state.post_list.map(feed => {\r\n                                    return (\r\n                                        <Feed\r\n                                            key={feed.id}\r\n                                            data={feed}\r\n                                        />\r\n                                    )\r\n                                })}\r\n                            </div>\r\n                        </div>\r\n\r\n                        <div className=\"w-full max-w-[350px]\">\r\n                            <div className=\"font-semibold text-gray-600 text-xl mb-8\">\r\n                                Tài khoản liên quan\r\n                            </div>\r\n                            {\r\n                                this.state.user_list.map(user => (\r\n                                    <a key={user.id} href=\"#\" className=\"mb-[20px] bg-white rounded-lg border-2 border-gray-200 p-2 py-4 cursor-pointer block\">\r\n                                        <User user={user} sizeAvt={AvatarSize.Medium} showName={true} twoLine={true} />\r\n                                    </a>))\r\n                            }\r\n                        </div>\r\n                    </div>\r\n                    <QuickRedirect />\r\n                </div>\r\n            </AuthLayout >\r\n        )\r\n    }\r\n} "],"names":["defaultValue","href","text","QuickRedirect","link","className","map","item","index","length","separator","TagSearch","this","props","content","isChecked","onClick","React","SEARCH_HOST","getSearch","address","price","username","console","log","axios","price_category","withCredentials","headers","response","status","ok","data","undefined","Districts","SearchPage","prop","state","keyword","addressTyping","isTypingFilterAddress","addressFilter","priceFilter","title","isCheck","id","user_list","post_list","url","URL","window","location","q","searchParams","get","setState","find","bind","filter","then","res","users","parseUser","posts","parsePost","AuthLayout","item_","IconButton","Icons","iconName","IconName","stroke","type","placeholder","value","onChange","event","target","indexOf","toLowerCase","includes","tmp","feed","Feed","user","User","sizeAvt","AvatarSize","showName","twoLine"],"sourceRoot":""}