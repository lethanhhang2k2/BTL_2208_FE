{"version":3,"file":"static/js/720.0b85132f.chunk.js","mappings":"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","sources":["layouts/AuthLayout/components/Nav.js","layouts/AuthLayout/components/BgEditLayout.js","routes/nametag/ButtonLink.js","routes/nametag/ColorOption.js","routes/nametag/index.js"],"sourcesContent":["import Icons, { IconName } from \"../../../components/Icons\";\r\nimport qrcode from \"../../../assets/images/qrcode.png\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nconst path = [ \"/nametag\", \"/quickcard\", \"/quickcard/edit\"]\r\n\r\nexport default function Nav() {\r\n\r\n    return (\r\n        <div className=\"flex\">\r\n            <NavLink path=\"/nametag\">\r\n                <img src={qrcode} className=\"w-[28px] h-[28px]\" />\r\n            </NavLink>\r\n            <NavLink path=\"/quickcard\">\r\n                <Icons iconName={IconName.Smartphone} width=\"28px\" height=\"28px\" stroke=\"white\" />\r\n            </NavLink>\r\n            <NavLink path=\"/quickcard/edit\">\r\n                <Icons iconName={IconName.Edit3} width=\"28px\" height=\"28px\" stroke=\"white\" />\r\n            </NavLink>\r\n        </div>\r\n    )\r\n}\r\n\r\nfunction NavLink({ path, children }) {\r\n\r\n    return (\r\n        <Link to={path} className={`link-nav ${path === window.location.pathname ? \"active\" : \"\"}`}>\r\n            {children}\r\n        </Link>\r\n    )\r\n}","import AuthLayout from \"../index\";\r\nimport Nav from \"./Nav\";\r\n\r\nexport default function BgEditLayout({ user, backgroundColor, children }) {\r\n    return (\r\n        <AuthLayout>\r\n            <div className=\"h-screen w-full flex flex-col items-center fixed\"\r\n                style={{\r\n                    backgroundColor: \"black\",\r\n                    background: backgroundColor\r\n                }}>\r\n                <div className=\"h-20 flex items-center w-full justify-end mr-[10%]\">\r\n                    <Nav />\r\n                </div>\r\n                <div className=\"flex justify-center pt-8 w-full\">\r\n                    {children}\r\n                </div>\r\n            </div>\r\n        </AuthLayout>\r\n    )\r\n}","export default function ButtonLink({ contentButton, active, handleOptionLink }) {\r\n    return (\r\n        <div className=\"\">\r\n            <button className={`text-[16px] text-white hover:border-b-2 hover:border-white hover:border-solid ${active && \"font-bold border-b-2 border-white border-solid\"}`} onClick={handleOptionLink}>\r\n                { contentButton }\r\n            </button>\r\n        </div>\r\n    )\r\n}","export default function ColorOption({ color = \"black\", borderWidth = \"2\", handleColor }) {\r\n    return (\r\n        <div\r\n            className={`w-[40px] h-[40px] rounded-full border-${borderWidth} border-solid border-white cursor-pointer hover:shadow-sm`}\r\n            style={{ background: color }}\r\n            onClick={handleColor}\r\n        >\r\n\r\n        </div>\r\n    )\r\n}","import { useEffect, useState, useContext } from \"react\";\r\nimport BgEditLayout from \"@layouts/AuthLayout/components/BgEditLayout\";\r\nimport { ThemeColor } from \"@AppTypes/user\"\r\nimport ButtonLink from \"./ButtonLink\";\r\nimport ColorOption from \"./ColorOption\";\r\nimport { UserContext } from \"@hooks/UserManager\";\r\n\r\nconst linkOptions = [\r\n    {\r\n        content: \"Link to quick card\"\r\n    },\r\n    {\r\n        content: \"Link to my profile\"\r\n    },\r\n    {\r\n        content: \"See my quick card\"\r\n    }\r\n]\r\n\r\nexport default function Nametag() {\r\n    const [bgColor, setBgColor] = useState({})\r\n    const [currentOption, setCurrentOption] = useState(0);\r\n    const {user} = useContext(UserContext)\r\n\r\n    useEffect(() => {\r\n        setBgColor({\r\n            id: user.theme,\r\n            color: ThemeColor[user.theme]\r\n        })\r\n    }, [])\r\n\r\n    const handleClickColor = (color) => {\r\n\r\n        console.log(color);\r\n        if (bgColor.id !== color.id) {\r\n            setBgColor(color)\r\n        }\r\n    }\r\n\r\n    const handleOption = (index) => {\r\n        if (index !== currentOption) setCurrentOption(index)\r\n    }\r\n\r\n    return (\r\n        <BgEditLayout\r\n            backgroundColor={bgColor.color}>\r\n            <div className=\"flex w-2/3 h-fit justify-between\">\r\n                <div className=\"w-[300px] h-fit bg-white p-8 rounded-xl\">\r\n                    <div className=\"flex justify-center\">\r\n                        <div className=\"w-[236px] h-[236px]\" style={{ background: bgColor.color }}></div>\r\n                    </div>\r\n                    <p className={`italic text-[2rem] font-qr text-center text-bg${bgColor.id}`}>\r\n                        {user.username}\r\n                    </p>\r\n                </div>\r\n\r\n                <div className=\"w-4/6 flex flex-col justify-between py-2\">\r\n                    <div className=\"text-[36px] text-white\">\r\n                        QR code helps people follow you quickly\r\n                    </div>\r\n                    <div className=\"text-[16px] text-white w-4/5\">\r\n                        People can scan your QR code with their smartphoneâ€™s camera to see your profile. Download and print your QR code, then stick it on your products, posters and more.\r\n                    </div>\r\n                    <div className=\"flex justify-between w-4/6\">\r\n                        {linkOptions.map((option, index) => {\r\n                            return (\r\n                                <ButtonLink\r\n                                    key={index}\r\n                                    contentButton={option.content}\r\n                                    handleOptionLink={() => handleOption(index)}\r\n                                    active={index === currentOption}\r\n                                />\r\n                            )\r\n                        })}\r\n                    </div>\r\n                    <div className=\"flex w-1/4 justify-between\">\r\n                        {Object.entries(ThemeColor).map(([id, color]) => {\r\n                            return (\r\n                                <ColorOption\r\n                                    key={id}\r\n                                    color={color}\r\n                                    borderWidth={id === bgColor.id ? \"4\" : \"2\"}\r\n                                    handleColor={() => handleClickColor({ id, color })}                                />\r\n                            )\r\n                        })}\r\n                    </div>\r\n                    <div>\r\n                        <button className={`bg-white py-2 px-4 rounded-full text-bg${bgColor.id} hover:shadow-md`}>\r\n                            Download this code\r\n                        </button>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </BgEditLayout>\r\n    )\r\n}"],"names":["Nav","className","NavLink","path","src","qrcode","Icons","iconName","IconName","width","height","stroke","children","to","window","location","pathname","BgEditLayout","user","backgroundColor","AuthLayout","style","background","ButtonLink","contentButton","active","handleOptionLink","onClick","ColorOption","color","borderWidth","handleColor","linkOptions","content","Nametag","useState","bgColor","setBgColor","currentOption","setCurrentOption","useContext","UserContext","useEffect","id","theme","ThemeColor","username","map","option","index","handleOption","Object","entries","console","log","handleClickColor"],"sourceRoot":""}